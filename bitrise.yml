---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: ios
trigger_map:
- push_branch: '*'
  workflow: frames-test-pods
- pull_request_source_branch: '*'
  workflow: pr-checks
workflows:
  pr-checks:
    after_run:
    - frames-pr-checks
    - checkout-pr-checks

  # frames pr workflows
  frames-pr-checks:
    after_run:
    - _frames-set-up
    - _frames-build-carthage
    - _frames-build-pods
    - _frames-build-spm
    - _frames-slack
  _frames-set-up:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    after_run: []
  _frames-build-carthage:
    steps:
    - carthage@3:
        inputs:
        - carthage_options: $CARTHAGE_XCFRAMEWORK
        - github_access_token: $access_token
    - xcode-test@4.1:
        inputs:
        - project_path: $FRAMES_CARTHAGE_PROJECT
        - destination: 'platform=iOS Simulator,name=iPhone 13,OS=latest'
        - scheme: $FRAMES_APP_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2:
        inputs:
        - cache_paths: $CARTHAGE_FOLDER
  _frames-build-pods:
    steps:
    - cocoapods-install@2.2:
        inputs:
        - podfile_path: $FRAMES_PODFILE
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_COCOAPODS_PROJECT
        - scheme: $FRAMES_APP_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    after_run: []
  _frames-build-spm:
    steps:
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_SPM_PROJECT
        - scheme: $FRAMES_APP_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
  _frames-slack:
    steps:
    - slack@3:
        inputs:
        - webhook_url: $iOSBuildsChannel
    after_run: []
  
  # frames test individual package manager
  frames-test-pods:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2.2:
        inputs:
        - podfile_path: $FRAMES_PODFILE
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_COCOAPODS_PROJECT
        - scheme: $FRAMES_TEST_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    - slack@3:
        inputs:
        - webhook_url: $FRAMES_IOS_BUILDS_CHANNEL
    after_run: []
  frames-test-spm:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_SPM_PROJECT
        - scheme: $FRAMES_TEST_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    - slack@3:
        inputs:
        - webhook_url: $FRAMES_IOS_BUILDS_CHANNEL
  frames-test-carthage:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
        inputs:
        - content: |
            # run carthage update command.
            carthage update --use-xcframeworks --platform iOS
    - certificate-and-profile-installer@1: {}
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_CARTHAGE_PROJECT
        - scheme: $FRAMES_TEST_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
  
  # frames misc workflows
  frames-deploy:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2.2:
        inputs:
        - podfile_path: $FRAMES_PODFILE
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_COCOAPODS_PROJECT
        - scheme: $FRAMES_APP_SCHEME
    - xcode-archive@2:
        inputs:
        - project_path: $FRAMES_COCOAPODS_PROJECT
        - scheme: $FRAMES_APP_SCHEME
        - export_method: $BITRISE_EXPORT_METHOD
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
  frames-playground:
    steps:
    - xcode-test@2:
        inputs:
        - project_path: $FRAMES_SPM_PROJECT
        - scheme: $FRAMES_APP_SCHEME
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    - slack@3:
        inputs:
        - webhook_url: $FRAMES_IOS_BUILDS_CHANNEL
  release-pod-frames:
    steps:
    - script@1:
        inputs:
        - content: pod trunk push --allow-warnings Frames.podspec
    before_run:
    - _frames-set-up
  frames-build-pods-release:
    steps:
    - cocoapods-install@1:
        inputs:
        - podfile_path: $FRAMES_PODFILE
    - xcode-build-for-simulator@0:
        inputs:
        - scheme: $FRAMES_APP_SCHEME
        - configuration: Release
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    after_run: []
    before_run:
    - _frames-set-up

  # checkout pr workflows
  checkout-pr-checks:
    after_run:
    - _set_up
    - _checkout-build-carthage
    - _checkout-build-pods
    - _checkout-build-spm
    - _checkout-slack
    before_run: []
  _set_up:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - certificate-and-profile-installer@1: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: "$CHECKOUT_COCOAPODS_PROJECT"
    after_run: []
  _checkout-build-carthage:
    steps:
    - carthage@3:
        inputs:
        - carthage_options: $CARTHAGE_XCFRAMEWORK
        - github_access_token: $access_token
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_CARTHAGE_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run: []
  _checkout-build-pods:
    steps:
    - cocoapods-install@2:
        inputs:
        - podfile_path: $CHECKOUT_PODFILE
    - swiftlint-extended@1:
        inputs:
        - lint_config_file: $CHECKOUT_SOURCE_DIR/.swiftlint.yml
        - linting_path: $CHECKOUT_SOURCE_DIR
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_COCOAPODS_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run: []
  _checkout-build-spm:
    steps:
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_SPM_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run: []
  _checkout-slack:
    steps:
    - slack@3:
        inputs:
        - channel: 'channel: #ios-builds'
        - text: Checkout-iOS Build Success
        - webhook_url: "$SLACK_CHANNEL_CHECKOUT"
  
  # checkout test invidividual package manager
  checkout-test-carthage:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_CARTHAGE_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run:
    - _checkout-slack
  checkout-test-pods:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: "$CHECKOUT_COCOAPODS_PROJECT"
    - cocoapods-install@2:
        inputs:
        - podfile_path: $CHECKOUT_PODFILE
    - swiftlint-extended@1:
        inputs:
        - lint_config_file: $CHECKOUT_SOURCE_DIR/.swiftlint.yml
        - linting_path: $CHECKOUT_SOURCE_DIR
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_COCOAPODS_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run:
    - _checkout-slack
  checkout-test-spm:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - xcode-test@4:
        inputs:
        - project_path: "$CHECKOUT_SPM_PROJECT"
        - scheme: "$CHECKOUT_SCHEME"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
    after_run:
    - _checkout-slack

app:
  envs:
  - opts:
      is_expand: false
    FRAMES_COCOAPODS_PROJECT: iOS Example Frame/iOS Example Frame.xcworkspace
  - opts:
      is_expand: false
    FRAMES_TEST_SCHEME: Frames-Unit-Tests
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
  - opts:
      is_expand: false
    FRAMES_PODFILE: iOS Example Frame/Podfile
  - opts:
      is_expand: false
    FRAMES_SPM_PROJECT: iOS Example Frame SPM/iOS Example Frame SPM.xcodeproj
  - opts:
      is_expand: false
    FRAMES_CARTHAGE_PROJECT: iOS Example Frame Carthage/iOS Example Frame Carthage.xcworkspace
  - opts:
      is_expand: false
    FRAMES_APP_SCHEME: iOS Example Frame
  - opts:
      is_expand: false
    CARTHAGE_XCFRAMEWORK: '--use-xcframeworks --platform iOS --cache-builds'
  - opts:
      is_expand: false
    CARTHAGE_FOLDER: Carthage
  - opts:
      is_expand: false
    CHECKOUT_COCOAPODS_PROJECT: Checkout/CocoapodsSample/CheckoutCocoapodsSample.xcworkspace
  - opts:
      is_expand: false
    CHECKOUT_SCHEME: Checkout
  - opts:
      is_expand: false
    BITRISE_DISTRIBUTION_METHOD: development
  - opts:
      is_expand: false
    CHECKOUT_CARTHAGE_PROJECT: iOS Example Frame Carthage/iOS Example Frame Carthage.xcworkspace
  - opts:
      is_expand: false
    CHECKOUT_SPM_PROJECT: Checkout/SPMSample/CheckoutSPMSample.xcodeproj
  - opts:
      is_expand: false
    CHECKOUT_PODFILE: Checkout/CocoapodsSample/Podfile
  - opts:
      is_expand: false
    CHECKOUT_SOURCE_DIR: Checkout
meta:
  bitrise.io:
    stack: osx-xcode-13.3.x
    machine_type_id: g2.4core
